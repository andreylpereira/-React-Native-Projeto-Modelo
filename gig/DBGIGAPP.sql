-- CREATE DATABASE DBGIGAPP;
-- USE DBGIGAPP;

-- CRIANDO TABELAS
CREATE TABLE ESTABELECIMENTO(
	IDESTABELECIMENTO SERIAL NOT NULL  PRIMARY KEY,
	NOME VARCHAR(30),
	EMAIL VARCHAR(40),
	SENHA VARCHAR(14),
	TELEFONE CHAR(11),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2),
	COMPLEMENTO VARCHAR(50),
	NOTA INT,
	LATITUDE INT,
	LONGITUDE INT
);

CREATE TABLE BANDA(
	IDBANDA SERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(30),
	EMAIL VARCHAR(40),
	SENHA VARCHAR(14),
	TELEFONE CHAR(11),
	ESTILOMUSICAL VARCHAR(20),
	DESCRICAO VARCHAR(100),
	NOTA INT,
	LATITUDE INT,
	LONGITUDE INT
);

CREATE TABLE AGENDA(
	IDAGENDA SERIAL NOT NULL PRIMARY KEY,
	IDESTABELECIMENTO INT REFERENCES ESTABELECIMENTO (IDESTABELECIMENTO),
	IDBANDA INT REFERENCES BANDA (IDBANDA),
	DATA DATE,
	HORA TIME
);

-- CRIANDO FUNÇÕES DE VALIDAÇÕES
CREATE OR REPLACE FUNCTION FN_VALIDA_ESTABELECIMENTO() 
RETURNS trigger LANGUAGE 'plpgsql'
AS $BODY$
BEGIN
	IF (TG_OP = 'INSERT') OR (TG_OP = 'UPDATE') THEN

		IF (length(NEW.NOME) = 0)OR(NEW.NOME IS NULL) THEN
			RAISE EXCEPTION 'O campo NOME deve ter pelo menos 1 caractere';
		ELSEIF (length(NEW.NOME) > 30) THEN
			RAISE EXCEPTION 'O campo NOME não pode ultrapassar 30 caracteres';
		END IF;
		
		IF (length(NEW.EMAIL) < 3)OR(NEW.EMAIL IS NULL) THEN
			RAISE EXCEPTION 'O campo EMAIL deve ter pelo menos 4 caracteres';
		ELSEIF (length(NEW.EMAIL) > 40) THEN
			RAISE EXCEPTION 'O campo EMAIL não pode ultrapassar 40 caracteres';
		END IF;
		
		IF (length(NEW.SENHA) < 6)OR(NEW.SENHA IS NULL) THEN
			RAISE EXCEPTION 'O campo SENHA deve ter pelo menos 6 caracteres';
		ELSEIF (length(NEW.SENHA) > 14) THEN
			RAISE EXCEPTION 'O campo SENHA não pode ultrapassar 14 caracteres';
		END IF;

	END IF;
	RETURN NEW;
END;
$BODY$;

-- CRIANDO TRIGGERS QUE RECEBEM AS FUNÇÕES
CREATE TRIGGER TR_VALIDAESTABELECIMENTO
AFTER INSERT OR UPDATE OR DELETE ON ESTABELECIMENTO
FOR EACH ROW EXECUTE PROCEDURE FN_VALIDA_ESTABELECIMENTO();